
import java.awt.Color;
import java.awt.Graphics;
import java.util.Random;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author pivanovs3
 */
public class KraasuSpeeles extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public KraasuSpeeles() {
        initComponents();
    }
    
    int pieceAmount, width;
    int whiteIndex = 0;
    int chosenIndex = 0;
    int[] color;
    int countFirst = 0;
    Color first;
    Color second;
    
  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jSpinner1 = new javax.swing.JSpinner();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Spēles kauliņu skaits:");

        jButton1.setText("LET THE GAME BEGIN");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(6, 6, 20, 1));

        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 140, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(0, 170, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Graphics g = jPanel1.getGraphics();    
        g.clearRect(0, 0, jPanel1.getWidth(), jPanel1.getHeight());
        pieceAmount = (int)jSpinner1.getValue();
        width = jPanel1.getWidth() / pieceAmount;
        
        Random rand = new Random();
        color = new int[pieceAmount];
        
        do {
            countFirst = 0;
            for (int i = 2; i < color.length; i++) {
                color[i] = 1 + rand.nextInt(2);
                if (color[i] == 1) countFirst++;
            }
            color[0] = 0;  color[1] = 0;
        } while (checkFinished());
        
        first = new Color(0, 122, 77);
        second = new Color(125, 0, 90);
        for (int i = 0; i < color.length; i++) {
            switch (color[i]) {
                case 0: 
                    g.setColor(Color.WHITE);
                    break;
                case 1: 
                    g.setColor(first);
                    break;
                case 2: 
                    g.setColor(second);
                    break;
            }
            g.fillRect(width * i, 0, width, width);
            g.setColor(Color.BLACK);
            g.drawRect(width*i, 0, width, width);
        }
        
        jButton1.setEnabled(false);
        jSpinner1.setEnabled(false);
        
    }//GEN-LAST:event_jButton1ActionPerformed
/**/
    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        // TODO add your handling code here:
        
        if (!jButton1.isEnabled()) {
        
            int x = evt.getX();
            
            if (x <= jPanel1.getWidth() - width) {
                
                chosenIndex = x / width;

                //mainīšana
                swapSquares();

                //te ir jābūt procedūrai, kas pārbauda vai kvadrātiņi ir jau salikti
                if (checkFinished()) {

                    jButton1.setEnabled(true);
                    jSpinner1.setEnabled(true);
                    JOptionPane.showMessageDialog(null, "WELL DONE! \n TEV IR IESPĒJA PASPĒLĒT VĒLREIZ!");

                }
            
            }
        
        }
        
    }//GEN-LAST:event_jPanel1MouseClicked

    public void swapSquares() {
    
        //pārbaudam, lai useris nepārvietotu baltus lauciņus
        if ((chosenIndex != whiteIndex) && (chosenIndex != whiteIndex + 1) && (chosenIndex + 1 != whiteIndex)){
            
            Graphics panel = jPanel1.getGraphics();
            
            //pirmā lauciņa pārvietošana
            if (color[chosenIndex] == 1) panel.setColor(first);
            else panel.setColor(second);
            panel.fillRect(width * whiteIndex, 0, width, width);
            panel.setColor(Color.BLACK);
            panel.drawRect(width * whiteIndex, 0, width, width);
            panel.setColor(Color.WHITE);
            panel.fillRect(width * chosenIndex, 0, width, width);
            panel.setColor(Color.BLACK);
            panel.drawRect(width * chosenIndex, 0, width, width);
            
            //otrā lauciņa pārvietošana
            if (color[chosenIndex + 1] == 1) panel.setColor(first);
            else panel.setColor(second);
            panel.fillRect(width * (whiteIndex + 1), 0, width, width);
            panel.setColor(Color.BLACK);
            panel.drawRect(width * (whiteIndex + 1), 0, width, width);
            panel.setColor(Color.WHITE);
            panel.fillRect(width * (chosenIndex + 1), 0, width, width);
            panel.setColor(Color.BLACK);
            panel.drawRect(width * (chosenIndex + 1), 0, width, width);
            
            //mainīgo izmainīšana
            color[whiteIndex] = color[chosenIndex];
            color[whiteIndex + 1] = color[chosenIndex + 1];
            color[chosenIndex] = 0;
            color[chosenIndex + 1] = 0;
            whiteIndex = chosenIndex;
            
        }
        
    }
    
    public boolean checkFinished() {
        
        if (color[0] == 0 && color[1] == 0) {
            for (int i = 2; i < countFirst + 2; i++) {
                
                if (color[i] == 2) return false;
                
            }
            return true;
        } else return false;
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KraasuSpeeles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KraasuSpeeles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KraasuSpeeles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KraasuSpeeles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new KraasuSpeeles().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSpinner jSpinner1;
    // End of variables declaration//GEN-END:variables

}