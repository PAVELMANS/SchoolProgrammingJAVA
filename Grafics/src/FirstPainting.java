
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author pivanovs3
 */
public class FirstPainting extends javax.swing.JFrame {

    /**
     * Creates new form FirstPainting
     */
    public FirstPainting() {
        initComponents();
    }
    
    @Override
    public void paint(Graphics g){
        super.paint(g);
        Graphics a = this.getGraphics();
        
        int upPiece = this.getWidth() / 5;
        int downPiece = this.getWidth() / 3;
        for (int i = 0; i <= 5; i++){
            for (int j = 0; j <= 3; j++){
                a.drawLine(upPiece * i, 0, downPiece * j, this.getHeight());
            }
        }
        
        /*Color potato = new Color(147, 0, 240);
        g.setColor(potato);
        g.drawRect(200,200,50,50);
        g.setColor(Color.magenta);
        g.fillRect(201, 201, 49, 49);*/
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sarkans = new javax.swing.JSlider();
        zalsh = new javax.swing.JSlider();
        zils = new javax.swing.JSlider();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        sarkans.setMaximum(255);
        sarkans.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sarkansStateChanged(evt);
            }
        });

        zalsh.setMaximum(255);
        zalsh.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                zalshStateChanged(evt);
            }
        });

        zils.setMaximum(255);
        zils.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                zilsStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(190, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sarkans, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zalsh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zils, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sarkans, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(zalsh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(zils, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(199, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sarkansStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sarkansStateChanged
        // TODO add your handling code here:
        Graphics g = this.getGraphics();
        
        Color potato = new Color(sarkans.getValue(), zalsh.getValue(), zils.getValue());
        g.setColor(potato);
     
        g.fillRect(50, 50, 150, 150);
        
    }//GEN-LAST:event_sarkansStateChanged

    private void zalshStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_zalshStateChanged
        // TODO add your handling code here:
        Graphics g = this.getGraphics();
        Graphics2D g2 = (Graphics2D)g;
        
        Color colour = new Color(sarkans.getValue(), zalsh.getValue(), zils.getValue());
        g.setColor(colour);
        
     
        g.fillRect(50, 50, 150, 150);
    }//GEN-LAST:event_zalshStateChanged

    private void zilsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_zilsStateChanged
        // TODO add your handling code here:
        Graphics g = this.getGraphics();
        
        Color potato = new Color(sarkans.getValue(), zalsh.getValue(), zils.getValue());
        g.setColor(potato);
     
        g.fillRect(50, 50, 150, 150);
    }//GEN-LAST:event_zilsStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FirstPainting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FirstPainting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FirstPainting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FirstPainting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FirstPainting().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider sarkans;
    private javax.swing.JSlider zalsh;
    private javax.swing.JSlider zils;
    // End of variables declaration//GEN-END:variables
}
